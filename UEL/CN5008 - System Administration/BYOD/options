#!/bin/bash

# Declaring the function to display the menu and get correct option for the task to perform.
display_menu() {
    clear

	echo "========================================================"
	echo "|                        MENU                          |"
	echo "========================================================"
	echo
	echo "Please select a number corresponding to the task below:"
	echo
	echo "[1] Create single user:"
	echo "[2] Create multiple user:"
	echo "[3] Edit user details:"
	echo "[4] Delete user:"
	echo "[0] Exit"
	echo
    read -p "Please select an option: " option # This will read from STDOUT (keyboard) and store in variable called option.
}

display_edit_menu() {
    clear

	echo "========================================================"
	echo "|                CHANGE USER DETAILS                   |"
	echo "========================================================"
	echo 
	echo "Please select an option for modification:"
	echo
	echo "[1] Change full name:"
	echo "[2] Change password:"
	echo "[0] Exit"
	echo
    read -p "Please select an option: " mod_option # This will read from STDOUT (keyboard) and store in variable called option.

    while true
    do
        # This will read the input from the user and do the function corresponding to that.
        case $mod_option in
            0)
                echo "Exiting..."
                break
                ;;

            1)
                echo -p "Enter the new full name: "
                break
                ;;
                
            2)
                ;;

            *)
                ;;
        esac
    done
}

# This while loop will keep the program running until the user explicitly choose to quit.
while true
do
    display_menu # Calls display_menu fucntion to show the menu.

    # The switch statement to read the selected option and perform tasks based on it.
    case $option in
        # If 0 is chosen the program will quit displaying the message Exiting...
        0)
            echo "Exiting..."
            break
            ;;

        # If 1 is chosen the program will use adduser command to create a new user.
        1)
            read -p "Enter username: " username
            # This command will prompt the user to supply password for the new user and then will prompt for other details like full name and phone number.
            if id $username &> /dev/null; then
                echo "The user already exist."
                break
            else
                sudo adduser $username
            fi
            break
            ;;

        # If the user select 2, the program will ask for the number of users to be added.
        2)
            # Lets the user specify how many users to add.
            read -p "Number of users accounts: " user_count

            # This loop will prompt user to give usernames for all users.
            for ((i = 0; i < $user_count; i++)); do
                read -p "Enter username of user $i: " username
                sudo useradd $username
            done
            break
            ;;

        # If the user select 3, the program will prompt for the username of user to make modifications
        3)
            read -p "Enter username of the user to modify: " username

            # Checks if the user exists and provide modification menu if there is a user, if not it will display message.
            if id "$username" &> /dev/null; then
                display_user_menu
            else
                echo "The user you specified does not exist."
            fi
            break
            ;;

        # If option 4 is chosen, the user will get a prompt for entering a username to delete from the system.
        4)
            read -p "Enter the username of the user to be deleted: " username

            # Checks if the user exists and delete is there is a user or display message if the user doesn't.
            if id "$username" &> /dev/null; then
                sudo userdel -r $username
            else
                echo "The user you specified does not exist."
            fi
            break
            ;;

        # If the user chooses any others not an option, this will default to displaying the message below and asks for a valid input.
        *)
            echo
            echo "Invalid input."
            echo
            read -p "Please enter a number between 1-4 or 0 to quit: " option
            ;;
    esac
done
